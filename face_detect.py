import cv2import timecascade_path="/Users/tanimu//.pyenv/versions/miniconda3-latest/pkgs/opencv-3.3.1-py36h60a5f38_1/share/OpenCV/haarcascades/haarcascade_frontalface_default.xml"window = "Push ESC key to stop this program"def detect_face(img):    cascade = cv2.CascadeClassifier(cascade_path)    facerect = cascade.detectMultiScale(img, scaleFactor=1.1, minNeighbors=1, minSize=(100, 100))    #顔の数だけ処理    if len(facerect) > 0:        for rect in facerect:            #矩形描画            cv2.rectangle(img, tuple(rect[0:2]),tuple(rect[0:2]+rect[2:4]), (255,255,255),3)            cut_img = img[rect[1]:rect[1]+rect[3],rect[0]:rect[0]+rect[2]]            cut_img = cv2.resize(cut_img,(rect[2]//20, rect[3]//20))            cut_img = cv2.resize(cut_img,(rect[2], rect[3]),cv2.INTER_NEAREST)            img[rect[1]:rect[1]+rect[3],rect[0]:rect[0]+rect[2]]=cut_img    cv2.imshow(window, img)    print(facerect)if(__name__ == '__main__'):    # デフォルトカメラは0    capture = cv2.VideoCapture(0)    # キャプチャ処理    while(True):        key = cv2.waitKey(5)        if(key == 27):            print("exit.")            break        # 画像キャプチャ        ret, img = capture.read()        # 取り込み開始になっていなかったら上の処理に戻る        if(ret == False):            print("Capture Failed. ")            break        #顔検出        detect_face(img)        time.sleep(0.050)    capture.release()    cv2.destroyAllWindows()